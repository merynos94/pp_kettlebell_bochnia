# Generated by Django 5.1 on 2024-09-01 16:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="SportClub",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("surname", models.CharField(max_length=50)),
                ("weight", models.FloatField(blank=True, default=0, null=True)),
                ("snatch_kettlebell_weight", models.FloatField(blank=True, null=True)),
                ("snatch_repetitions", models.IntegerField(blank=True, null=True)),
                ("tgu_weight", models.FloatField(blank=True, null=True)),
                ("see_saw_press_weight_left", models.FloatField(blank=True, null=True)),
                (
                    "see_saw_press_weight_right",
                    models.FloatField(blank=True, null=True),
                ),
                ("kb_squat_weight", models.FloatField(blank=True, null=True)),
                ("tiebreak", models.BooleanField(default=False)),
                ("categories", models.ManyToManyField(to="tournament.category")),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournament.sportclub",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OverallResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("snatch_points", models.IntegerField(default=0)),
                ("tgu_points", models.IntegerField(default=0)),
                ("see_saw_press_points", models.IntegerField(default=0)),
                ("kb_squat_points", models.IntegerField(default=0)),
                ("tiebreak_points", models.FloatField(default=0)),
                ("total_points", models.FloatField(default=0)),
                ("final_position", models.IntegerField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournament.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="KBSquatResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("result", models.FloatField()),
                ("position", models.IntegerField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournament.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SeeSawPressResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("result_left", models.FloatField()),
                ("result_right", models.FloatField()),
                ("position", models.IntegerField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournament.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SnatchResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("result", models.FloatField()),
                ("position", models.IntegerField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournament.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TGUResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("result", models.FloatField()),
                ("position", models.IntegerField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournament.player",
                    ),
                ),
            ],
        ),
    ]
